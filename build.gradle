buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.22.RELEASE")
        classpath("io.spring.gradle:dependency-management-plugin:0.5.4.RELEASE")
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0'
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.junit.platform.gradle.plugin'

jar {
    archiveBaseName.set('scorekeep-api')
    archiveVersion.set('1.0.0')
}

repositories {
    mavenCentral()
    mavenLocal()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

String xrayVer = "2.7.1"

dependencies {
    compile("com.amazonaws:aws-xray-recorder-sdk-core")
    compile("org.apache.httpcomponents:httpclient:4.5.9")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("com.amazonaws:aws-java-sdk-dynamodb")
    compile("com.amazonaws:aws-java-sdk-lambda")
    compile("com.amazonaws:aws-java-sdk-sns")
    compile("org.postgresql:postgresql:9.4.1211.jre7")
    compile("com.fasterxml.jackson.core:jackson-databind:2.8.11")

    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("org.junit.jupiter:junit-jupiter-api:5.0.3")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:5.0.3")
}

dependencyManagement {
    imports {
        mavenBom("com.amazonaws:aws-java-sdk-bom:1.11.761")
        mavenBom("com.amazonaws:aws-xray-recorder-sdk-bom:${xrayVer}")
    }
}

// For enabling the agent when running locally
bootRun {
    String disco = "${System.getProperty("user.dir")}/disco"
    jvmArgs = ["-javaagent:$disco/disco-java-agent.jar=pluginPath=$disco/disco-plugins"]
}
